#!/bin/bash

# @author Mustafa Hasturk
# @mail mustafa.hasturk@yandex.com
# @author Caio Oliveira
# @mail caiooliveirafarias0@gmail.com
# @author Christoph Kepler
# @mail development@kepler.international
# @author Usb Key
# @mail usbkey9@gmail.com

if [ ! /etc/cron.daily = pwd ]; then cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; fi

if [ ! -f ./ukuk.cfg ]; then ./setup ; fi

source ./ukuk.cfg

function download() {
  wget $_PROGRESS_OPT -P /tmp $(lynx -dump -listonly -dont-wrap-pre $kernelURL | grep "$1" | grep "$2" | grep "$arch" | cut -d ' ' -f 4 | tail -1)
  if [ $? == "1" ]
  then
    echo "Download failed!"
    exit 1
  fi
}

case "$kernelrc" in
   "1") kernelURL=$(lynx -dump -nonumbers http://kernel.ubuntu.com/~kernel-ppa/mainline/ | tail -1) ;;
   *) kernelURL="http://kernel.ubuntu.com/~kernel-ppa/mainline/"$(lynx -dump -nonumbers http://kernel.ubuntu.com/~kernel-ppa/mainline/ | grep -v rc | rev | cut -d '/' -f 2 | rev | grep -E 'v.+' | sort -V | rev | cut -d ' ' -f 1 | rev | tail -1)"/" ;;
esac

# Same version test
if [ $(echo $kernelURL | awk -F"/v" '{print $2}' | cut -d'/' -f 1) = $(dpkg-deb -f /tmp/linux-*.deb Version | cut -d'-' -f 1) ]; then
	echo 'Kernel up to date. Finishing'
	exit
fi

# Clean TMP Kernel
cat << EOF

Cleaning old downloads in /tmp
EOF
rm -rf /tmp/linux*.deb

# Download Kernel Header
cat << EOF

Downloading the latest $kernelmode kernel header...
EOF
download $kernelmode header

# Download Kernel Image
cat << EOF

Downloading the latest $kernelmode kernel image...
EOF
download $kernelmode image

# Download Shared Kernel Header
cat << EOF

Downloading the shared kernel header...
EOF
wget $_PROGRESS_OPT -P /tmp $(lynx -dump -listonly -dont-wrap-pre $kernelURL | grep all | grep headers | cut -d ' ' -f 4 | tail -1)
if [ $? == '1' ]
then
  echo 'Download failed!'
  exit 1
fi

# Install Kernel
cat << EOF

Installing Kernel and Headers...
EOF
sudo dpkg -i /tmp/linux*.deb
rm -rf /tmp/linux*.deb

cat << EOF

Finished.
EOF

if [ ! /etc/cron.daily = pwd ]; then
	read -p 'Do you want to reboot system now? (y/n)(10s to No): ' -n 1 -t 10 -s rs
	case "$rs" in
	  y | Y)
	    echo "Yes, reboot this now!"
	    sleep 2
	    sudo reboot ;;
	  *) echo 'No, stay this wake uped!' ;;
	esac ;
fi
