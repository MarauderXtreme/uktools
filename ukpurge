#!/bin/bash

# @author Caio Oliveira
# @mail caiooliveirafarias0@gmail.com
# @author Usb Key
# @mail usbkey9@gmail.com

#Follow symlink and cd to right directory
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
	DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	SOURCE="$(readlink "$SOURCE")"
	[[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
cd "$( cd -P "$( dirname "$SOURCE" )" && pwd )"

if [ -f ./uku.cfg ]; then source ./uku.cfg ; else arm=0; fi

lkv=`uname -r`
kernels=($(dpkg --list | grep -E "linux-headers" | grep -v "generic" | awk '{ print $2 }' | cut -d'-' -f3- | sort -uV | head -n -2))

function keepBaseVersion(){

	nb=0
	base=$(echo "${kernels[0]}" | cut -d'-' -f1)

	for kernel in "${kernels[@]}"
	do
		if [[ $base = $(echo "$kernel" | cut -d'-' -f1) ]]; then ((nb++)) ;fi
	done

	if [[ $nb > 1 ]]; then unset 'kernels[nb-1]'; fi
}

function remove() {
	for kernel in "${kernels[@]}"
	do
		dpkg --list | awk '{ print $2 }' | grep "$kernel" | xargs sudo apt-get -y purge
	done
}

keepBaseVersion

echo
echo "Ubuntu Kernel Purge - by Caio Oliveira"
echo
echo "This script will only keep three versions: the first and the last two, others will be purge"

if [ "$(echo $lkv | grep -o generic | head -1)" = "generic" ]
	then lkve="Generic"; nlkv=`echo $lkv | rev | cut -c 9- | rev`
	else lkve="LowLatency"; nlkv=`echo $lkv | rev | cut -c 12- | rev`
fi

echo
echo "---Current version:"
echo "Linux Kernel $nlkv $lkve (linux-image-$lkv)"

if [ -z "$kernels" ];
then echo "Nothing to remove!" ;
else
	echo
	echo "---Versions to remove:"
	printf '%s\n' "${kernels[@]}"
	echo

	if [ $arm = 0 ];
	then
		read -p "---Do you want to remove the old kernels/headers versions? (Y/n): " -n 1 -t 10 -s rr
		case "$rr" in
			Y) echo "Yes, remove this now!";
			sleep 2;
			remove ;;
			*) echo "No, thanks!" ;;
		esac ;
	else remove ;
	fi
fi

echo
echo "Thanks for using this script!!!"
